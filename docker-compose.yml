version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: '2181'
      ZOOKEEPER_TICK_TIME: '2000'

  broker:
    image: confluentinc/cp-kafka:5.4.2
    hostname: broker
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
      - 9092:9092
      - 9101:9101
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      # KAFKA_ADVERTISED_HOST_NAME: 'broker'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: 'PLAINTEXT://:29092,PLAINTEXT_HOST://:9092'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.1
    depends_on:
      - zookeeper
      - broker
    ports:
      - '8081:8081'
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
  cache:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
    environment:
      - REDIS_PASSWORD=docker
      - REDIS_PORT=6379
      - REDIS_DATABASES=demodb
    networks:
      - app_network

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_PASSWORD=docker
      - POSTGRES_USER=root
      - POSTGRES_DB=demodb
    ports:
      - '5432:5432'
    networks:
      - app_network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U root -d demodb || exit 1']
      interval: 10s
      timeout: 3s
      retries: 3
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - '16686:16686'
      - '4317:4317'
      - '4318:4318'
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - app_network
    healthcheck:
      test: ['CMD', 'wget', '--spider', 'localhost:16686']
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local

networks:
  app_network:
    driver: bridge
